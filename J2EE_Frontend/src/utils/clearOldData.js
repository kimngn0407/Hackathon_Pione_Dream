/**
 * FILE: clearOldData.js
 * M·ª§C ƒê√çCH: Cung c·∫•p c√°c utility functions ƒë·ªÉ x√≥a d·ªØ li·ªáu c≈© trong localStorage
 * ƒê∆∞·ª£c s·ª≠ d·ª•ng khi c·∫ßn reset d·ªØ li·ªáu ho·∫∑c logout user
 */

/**
 * H√†m x√≥a to√†n b·ªô d·ªØ li·ªáu trong localStorage
 * 
 * CH·ª®C NƒÇNG:
 * - X√≥a ho√†n to√†n t·∫•t c·∫£ d·ªØ li·ªáu ƒë∆∞·ª£c l∆∞u trong localStorage c·ªßa tr√¨nh duy·ªát
 * - S·ª≠ d·ª•ng khi c·∫ßn reset ho√†n to√†n ·ª©ng d·ª•ng v·ªÅ tr·∫°ng th√°i ban ƒë·∫ßu
 * 
 * C√ÅCH HO·∫†T ƒê·ªòNG:
 * 1. In th√¥ng b√°o b·∫Øt ƒë·∫ßu qu√° tr√¨nh x√≥a d·ªØ li·ªáu
 * 2. G·ªçi localStorage.clear() ƒë·ªÉ x√≥a t·∫•t c·∫£ key-value pairs
 * 3. In th√¥ng b√°o ho√†n th√†nh
 * 
 * L∆ØU √ù: H√†m n√†y s·∫Ω x√≥a ALL d·ªØ li·ªáu, kh√¥ng ch·ªâ d·ªØ li·ªáu c·ªßa ·ª©ng d·ª•ng n√†y
 */
export const clearAllOldData = () => {
  // In th√¥ng b√°o b·∫Øt ƒë·∫ßu v·ªõi icon emoji ƒë·ªÉ d·ªÖ nh·∫≠n bi·∫øt trong console
  console.log('üßπ Clearing all old localStorage data...');
  
  // X√≥a ho√†n to√†n t·∫•t c·∫£ d·ªØ li·ªáu trong localStorage
  // localStorage.clear() l√† method built-in c·ªßa Web Storage API
  localStorage.clear();
  
  // In th√¥ng b√°o ho√†n th√†nh v·ªõi icon check mark
  console.log('‚úÖ All localStorage data cleared');
};

/**
 * H√†m x√≥a ch·ªâ d·ªØ li·ªáu li√™n quan ƒë·∫øn user (selective clearing)
 * 
 * CH·ª®C NƒÇNG:
 * - X√≥a c√°c d·ªØ li·ªáu c·ª• th·ªÉ li√™n quan ƒë·∫øn th√¥ng tin user v√† authentication
 * - An to√†n h∆°n clearAllOldData v√¨ ch·ªâ x√≥a d·ªØ li·ªáu c·ªßa ·ª©ng d·ª•ng
 * - Th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng khi user logout
 * 
 * C√ÅCH HO·∫†T ƒê·ªòNG:
 * 1. Define m·ªôt array c√°c keys c·∫ßn x√≥a
 * 2. Loop qua t·ª´ng key v√† x√≥a kh·ªèi localStorage
 * 3. Log t·ª´ng key ƒë√£ ƒë∆∞·ª£c x√≥a ƒë·ªÉ theo d√µi
 * 
 * C√ÅC KEY ƒê∆Ø·ª¢C X√ìA:
 * - token: JWT token ƒë·ªÉ authenticate user
 * - userEmail: Email c·ªßa user ƒëang ƒëƒÉng nh·∫≠p
 * - userRole: Role/quy·ªÅn c·ªßa user (admin, user, etc.)
 * - user: Object ch·ª©a th√¥ng tin user
 * - profileData: D·ªØ li·ªáu profile chi ti·∫øt c·ªßa user
 * - lastLoginTime: Th·ªùi gian ƒëƒÉng nh·∫≠p l·∫ßn cu·ªëi
 * - apiErrors: L·ªói API ƒë∆∞·ª£c cache
 */
export const clearUserData = () => {
  // In th√¥ng b√°o b·∫Øt ƒë·∫ßu qu√° tr√¨nh x√≥a d·ªØ li·ªáu user
  console.log('üßπ Clearing user-related localStorage data...');
  
  // Danh s√°ch c√°c keys trong localStorage c·∫ßn ƒë∆∞·ª£c x√≥a
  // Ch·ªâ bao g·ªìm nh·ªØng d·ªØ li·ªáu li√™n quan ƒë·∫øn user authentication v√† profile
  const keysToRemove = [
    'token',          // JWT authentication token
    'userEmail',      // Email address c·ªßa user
    'userRole',       // Role/permission level c·ªßa user
    'user',           // Object ch·ª©a th√¥ng tin user t·ªïng qu√°t
    'profileData',    // D·ªØ li·ªáu profile chi ti·∫øt (avatar, settings, etc.)
    'lastLoginTime',  // Timestamp c·ªßa l·∫ßn ƒëƒÉng nh·∫≠p cu·ªëi
    'apiErrors'       // Cache c√°c l·ªói API ƒë·ªÉ hi·ªÉn th·ªã
  ];
  
  // Loop qua t·ª´ng key trong danh s√°ch v√† x√≥a kh·ªèi localStorage
  keysToRemove.forEach(key => {
    // localStorage.removeItem() x√≥a m·ªôt key c·ª• th·ªÉ
    // N·∫øu key kh√¥ng t·ªìn t·∫°i, method n√†y kh√¥ng l√†m g√¨ c·∫£ (kh√¥ng throw error)
    localStorage.removeItem(key);
    
    // Log key ƒë√£ ƒë∆∞·ª£c x√≥a ƒë·ªÉ developer c√≥ th·ªÉ track trong console
    console.log(`  - Removed: ${key}`);
  });
  
  // In th√¥ng b√°o ho√†n th√†nh
  console.log('‚úÖ User data cleared');
};
